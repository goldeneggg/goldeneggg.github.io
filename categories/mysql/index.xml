<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mysql on horizoon</title>
    <link>https://horizoon.jp/categories/mysql/</link>
    <description>Recent content in mysql on horizoon</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 06 Mar 2019 12:15:00 +0900</lastBuildDate><atom:link href="https://horizoon.jp/categories/mysql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MySQL8.0 Document Store関連技術まとめ</title>
      <link>https://horizoon.jp/post/2019/03/06/mysql8_3x/</link>
      <pubDate>Wed, 06 Mar 2019 12:15:00 +0900</pubDate>
      
      <guid>https://horizoon.jp/post/2019/03/06/mysql8_3x/</guid>
      <description>Summary  ver 5.7.12 で追加された「3つのX」。ver 8.0からGA  X Protocol X DevAPI X Plugin   X Protocol  アプリケーションがX Pluginと通信するために使われる新プロトコル。MySQLへの（これまで通りの）SQLインターフェース ＋ NoSQLインタフェースの両方をサポートしている   X DevAPI  MySQL用のNoSQLソリューションを開発したり、Document StoreとしてMySQLを使用したりすることを可能にするAPI Connectors  X DevAPIをサポートしている、言語別クライアント C++, Java, Node.js, .NET, Python の各言語向けライブラリが公式に提供されている   MySQL Shell  MySQLサーバへの新しい対話型インタフェースで、Connector同様にX DevAPIをサポートしている 以前からのmysqlコマンドと同じSQLインタフェースに加えて、JavaScript, Pythonでもコンソール上での各種操作が可能。 JSやPythonでmysqlコンソールを操作できる     X Plugin  X Protocolをサーバー側で有効にして、X Protocolを使ってクライアントとの通信を可能にする為のプラグイン Document StoreとしてMySQLを使用する為にはX Pluginが有効化されていなければならない  ver 8.0.11以降はデフォルトで有効化されている     Document Store  「3つのX」を使って、JSON DocumentをNoSQL/DocumentDB likeに取り扱う仕組み     X Protocol 公式 - MySQL :: MySQL Internals Manual :: 15 X Protocol</description>
    </item>
    
    <item>
      <title>MySQL5.7 InnoDB のN-gram全文検索を検証＆サービス導入した</title>
      <link>https://horizoon.jp/post/2018/11/19/mysql_innodb_fts/</link>
      <pubDate>Mon, 19 Nov 2018 03:21:36 +0900</pubDate>
      
      <guid>https://horizoon.jp/post/2018/11/19/mysql_innodb_fts/</guid>
      <description>※ この記事は以前Mediumで公開した記事 の転載です
MySQL5.7・InnoDB・N-gram という環境下で全文検索の挙動やパフォーマンスについて検証を行った。FULLTEXT INDEXは以前はMyISAMでしか利用できなかったが、 5.6.4からInnoDBでのサポートが始まっていた。
InnoDBの全文検索は5.7、特に5.7.6以降でいわゆるCJK（中国語・日本語・韓国語）がN-gramで標準サポートされ始め、 CREATE TABLE文で簡単にパーサーを指定できる構文のサポート、 設定やクエリの組立で考えないといけない事が減った事で導入障壁がかなり下がっている。 ※4.1と5.0でサービス導入経験がある私の個人的な比較感想です。
FULLTEXT INDEXも他のINDEXと同様にデータ更新・削除の際にINDEXのrebuildが走るので更新時の負荷には注意が必要で、FULLTEXT INDEXの場合は「rebuild負荷が列に含まれる単語数に比例する」「rebuildでの断片化が起こりやすい」という固有の注意点もあり、「件数が多い」「FULLTEXT INDEXを貼ったカラムの更新頻度が激しい」という条件が揃ったテーブルへの導入は十分な検証の上で実施した方が良さそう。
下記に書いた検証を経て開発したサービスでも導入してみたが、結論だけ書くと「（当たり前だが）用法用量さえ守れば十分使える。バックエンドのDBがMySQLなら、リッチな全文検索機構を導入する前段階なんかは活用場面としてオススメできる」と感じた。
やること 国税庁が公開している法人番号データを使って検証してみる。データ件数が100万件強程度になるように東京・大阪・海外 の3種類をマージしたデータを使った。用意したデータとテーブルについてはgithubにupしている。charsetをutf8mb4にしているのは、utf8だと登録時にエラーになる文字を含んだ法人が複数存在する為。collationはデフォルトであるuft8mb4_general_ciを使用する。
1 2 3 4 5 6 7 8  &amp;gt; show collation like &amp;#39;utf8mb4%&amp;#39; \G; *************************** 1. row *************************** Collation: utf8mb4_general_ci Charset: utf8mb4 Id: 45 Default: Yes Compiled: Yes Sortlen: 1   今回付けたFULLTEXT INDEXは会社名検索・住所検索を想定したものにしている。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  -- 法人番号データ投入用テーブルのCREATE文 CREATE TABLE `corporate_nums` ( `id` int NOT NULL AUTO_INCREMENT, `sequence_number` varchar(8) NOT NULL, `corporate_number` char(13) DEFAULT NULL, `process` char(2) DEFAULT NULL, `correct` char(1) DEFAULT NULL, `update_date` char(10) DEFAULT NULL, `change_date` char(10) DEFAULT NULL, `name` varchar(150) DEFAULT NULL, `name_image_id` char(8) DEFAULT NULL, `kind` char(3) DEFAULT NULL, `prefecture_name` varchar(10) DEFAULT NULL, `city_name` varchar(20) DEFAULT NULL, `street_number` varchar(300) DEFAULT NULL, `address_image_id` char(8) DEFAULT NULL, `prefecture_code` char(2) DEFAULT NULL, `city_code` char(3) DEFAULT NULL, `post_code` char(7) DEFAULT NULL, `address_outside` varchar(300) DEFAULT NULL, `address_outside_image_id` char(8) DEFAULT NULL, `close_date` char(10) DEFAULT NULL, `close_cause` char(2) DEFAULT NULL, `successor_corporate_number` char(13) DEFAULT NULL, `change_cause` varchar(500) DEFAULT NULL, `assignment_date` char(10), `latest` char(1) DEFAULT NULL, `en_name` varchar(300) DEFAULT NULL, `en_prefecture_name` varchar(9) DEFAULT NULL, `en_city_name` varchar(600) DEFAULT NULL, `en_address_outside` varchar(600) DEFAULT NULL, PRIMARY KEY (`id`), KEY `cn_i1` (`sequence_number`), KEY `cn_i2` (`corporate_number`), FULLTEXT KEY `cn_fti1` (`name`, `en_name`) WITH PARSER ngram, FULLTEXT KEY `cn_fti2` (`prefecture_name`, `city_name`, `street_number`, `en_prefecture_name`, `en_city_name`) WITH PARSER ngram ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=DYNAMIC   件数は↓この通り</description>
    </item>
    
  </channel>
</rss>
